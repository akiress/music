#N canvas 50 51 1425 739 10;
#X obj 83 530 osc~;
#X floatatom 56 396 5 50 90 0 - - -;
#X obj 83 481 mtof;
#X text 91 402 MIDI note number;
#X floatatom 83 506 5 0 0 0 - - -;
#X text 118 505 Frequency in Hz (i.e. cycles per second);
#X obj 98 570 line~;
#X obj 71 672 dac~;
#X obj 83 647 *~ 0.05;
#X text 135 647 Decrease the overall volume so that it's not too loud
;
#X obj 83 613 *~;
#X obj 56 426 t b f;
#X text -19 412 A bang will;
#X text -19 425 come out;
#X text -20 439 here ------>;
#X text -20 334 Get help on the line~ object by right clicking on it
and selecting help. Figure out how to send messages to the line~ object
so that each time you change the MIDI note number \, the volume will
increase and then decrease again.;
#X text 111 587 <--- Currently line~ is just outputting zero \, so
you don't hear any sound. You need to send lists of messages to the
line~ object in order to make it become non-zero during notes.;
#X text 383 428 What happens when you multiply an audio signal by zero?
;
#X text 383 443 What does the resulting signal sound like?;
#X obj -6 513 delay 50;
#X msg -8 565 0 100;
#X msg 22 538 1 50;
#X floatatom -18 -86 5 50 90 0 - - -;
#X obj -18 -63 mtof;
#X text 17 -87 MIDI note number;
#X floatatom -18 -38 5 0 0 0 - - -;
#X text 17 -39 Frequency in Hz (i.e. cycles per second);
#X obj 262 150 *~;
#X obj 280 56 hsl 128 15 0 127 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X floatatom 277 79 5 0 0 0 - - -;
#X floatatom 277 128 5 0 0 0 - - -;
#X obj 251 175 dac~;
#X obj -18 22 osc~;
#X obj 37 21 osc~;
#X obj 37 -2 * 2;
#X obj 95 21 osc~;
#X obj 95 -2 * 3;
#X obj 155 20 osc~;
#X obj 213 20 osc~;
#X obj 155 -3 * 4;
#X obj 213 -3 * 5;
#X text 418 54 Volume gain control;
#X text 416 66 (Initially set to zero);
#X text -20 311 B. Using line~;
#X text -20 -183 A. Additive synthesis;
#X text -18 896 C. Subtractive synthesis;
#X text -17 916 A lot of different filters are available for pd. I
usually find filters by googling "list of pd objects" and then looking
through the list to find the filter I want. In this example \, you
will use the bandpass filter bpq2~.;
#X obj 72 1359 *~;
#X obj 90 1265 hsl 128 15 0 127 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X floatatom 87 1288 5 0 0 0 - - -;
#X floatatom 87 1337 5 0 0 0 - - -;
#X obj 61 1384 dac~;
#X text 228 1263 Volume gain control;
#X text 226 1275 (Initially set to zero);
#X obj -13 1120 pink~;
#X floatatom 75 1122 3 40 90 0 - - -;
#X obj 75 1141 mtof;
#X floatatom 75 1160 9 0 22000 0 - - -;
#X text 139 1161 Hz;
#X floatatom 138 1202 5 2 9999 0 - - -;
#X text 179 1203 ms;
#X floatatom 105 1183 4 4 50 0 - - -;
#X text 138 1183 Q;
#X text 185 1170 2.arg:<float> Q [-];
#X text 185 1160 1.arg:<float> center_freq. [Hz];
#X text 185 1180 3.arg:<float> interpolation_time [ms];
#X text 100 1122 MIDI note number;
#X text -15 984 The following patch currently uses subtractive synthesis.
The pink~ object outputs noise that has energy at all frequencies.
The bandpass filter reduces the energy at frequencies far away from
the center frequency.;
#X text -14 1076 Modify this patch so that you can hear two "tones"
at the same time instead of just one.;
#X obj 45 1222 bpq2~ 440 20 200;
#X text -14 1042 Which control is easier to use? The MIDI note number
of the frequency in Hz?;
#X text -17 1981 E. Optional challenge;
#X text -18 2005 Go back and modify the volume controls so that they
don't make any clicking sounds when you adjust them!;
#X floatatom 45 1661 5 0 0 0 - - -;
#X floatatom -17 1641 7 0 0 0 - - -;
#X floatatom 82 1682 5 0 0 0 - - -;
#X text 126 1681 Modulation index;
#X text 82 1660 Harmonicity ratio;
#X text 31 1638 Carrier frequency in Hz;
#N canvas 567 154 414 296 simpleFM 1;
#X floatatom 90 59 5 0 0 0 - - -;
#X floatatom 28 39 7 0 0 0 - - -;
#X obj 90 106 *;
#X obj 90 82 t b f;
#X obj 138 136 *;
#X obj 138 112 t b f;
#X floatatom 138 90 5 0 0 0 - - -;
#X text 182 89 Modulation index;
#X text 127 58 Harmonicity ratio;
#X text 76 36 Carrier frequency in Hz;
#X obj 90 164 osc~;
#X obj 90 189 *~;
#X text 122 163 Modulating oscillator;
#X text 166 138 Calculate modulating amplitude;
#X obj 13 219 +~;
#X obj 13 242 osc~;
#X obj 28 13 inlet;
#X obj 90 15 inlet;
#X obj 138 16 inlet;
#X obj 13 265 outlet~;
#X text 62 213 In Frequency Modulation (FM) \, the *output* of one
oscillator is used to control the frequency of a second oscillator.
;
#X connect 0 0 3 0;
#X connect 1 0 2 0;
#X connect 1 0 14 1;
#X connect 2 0 4 0;
#X connect 2 0 10 0;
#X connect 3 0 2 0;
#X connect 3 1 2 1;
#X connect 4 0 11 1;
#X connect 5 0 4 0;
#X connect 5 1 4 1;
#X connect 6 0 5 0;
#X connect 10 0 11 0;
#X connect 11 0 14 0;
#X connect 14 0 15 0;
#X connect 15 0 19 0;
#X connect 16 0 1 0;
#X connect 17 0 0 0;
#X connect 18 0 6 0;
#X restore 12 1706 pd simpleFM;
#X text 86 1707 <--- Subpatch (click me to see inside);
#X obj 324 1775 *~;
#X obj 342 1681 hsl 128 15 0 127 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X floatatom 339 1704 5 0 0 0 - - -;
#X floatatom 339 1753 5 0 0 0 - - -;
#X obj 313 1800 dac~;
#X text 480 1679 Volume gain control;
#X text 478 1691 (Initially set to zero);
#X obj 11 1555 loadbang;
#X text 163 1541 D. Program some more presets for this example of frequency
modulation sound synthesis. One preset is currently provided \, which
is initialized via the "loadbang" object \, which sends a bang when
the patch is first loaded. (Therefore \, you won't need loadbangs for
the additional presets.);
#X obj 11 1601 unpack 0 0 0;
#X msg 11 1578 340 0.2 7;
#X obj 339 1728 / 1270;
#X obj 87 1312 / 1270;
#X obj 277 103 / 1270;
#X text -20 -157 Find a way to connect the outlets of the osc~ objects
to the volume control. You can already adjust the pitch of the sound
via the MIDI note number box \, but make sure that with your patch
here you can also adjust the timbre of the sound.;
#X floatatom 609 -124 5 50 90 0 - - -;
#X obj 609 -101 mtof;
#X text 644 -125 MIDI note number;
#X floatatom 609 -76 5 0 0 0 - - -;
#X text 644 -77 Frequency in Hz (i.e. cycles per second);
#X obj 609 -16 osc~;
#X obj 664 -17 osc~;
#X obj 664 -40 * 2;
#X obj 722 -17 osc~;
#X obj 722 -40 * 3;
#X obj 782 -18 osc~;
#X obj 840 -18 osc~;
#X obj 782 -41 * 4;
#X obj 840 -41 * 5;
#X obj 756 317 *~;
#X obj 1045 -57 hsl 128 15 0 127 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X floatatom 1042 -34 5 0 0 0 - - -;
#X floatatom 1042 15 5 0 0 0 - - -;
#X obj 745 342 dac~;
#X text 1183 -59 Volume gain control;
#X text 1181 -47 (Initially set to zero);
#X obj 1042 -10 / 1270;
#X floatatom 899 5 5 0 0 0 - - -;
#X floatatom 632 16 5 0 0 0 - - -;
#X floatatom 685 48 5 0 0 0 - - -;
#X floatatom 741 81 5 0 0 0 - - -;
#X floatatom 801 19 5 0 0 0 - - -;
#X obj 605 51 *~ 0.01;
#X obj 673 81 *~ 0.01;
#X obj 729 121 *~ 0.01;
#X obj 783 65 *~ 0.01;
#X obj 864 37 *~ 0.01;
#X obj 130 535 1 1000;
#X obj 199 555 1 500;
#X floatatom 658 482 5 0 0 0 - - -;
#X obj 680 514 mtof;
#X floatatom 659 544 5 0 0 0 - - -;
#X obj 657 580 osc~;
#X obj 705 581 line~;
#X obj 655 674 dac~;
#X obj 767 1358 *~;
#X obj 785 1264 hsl 128 15 0 127 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X floatatom 782 1287 5 0 0 0 - - -;
#X floatatom 782 1336 5 0 0 0 - - -;
#X obj 756 1383 dac~;
#X obj 782 1311 / 1270;
#X floatatom 455 1267 3 40 90 0 - - -;
#X obj 455 1286 mtof;
#X floatatom 455 1305 9 0 22000 0 - - -;
#X text 519 1306 Hz;
#X floatatom 518 1347 5 2 9999 0 - - -;
#X text 559 1348 ms;
#X floatatom 485 1328 4 4 50 0 - - -;
#X text 518 1328 Q;
#X obj 425 1367 bpq2~ 440 20 200;
#X obj 391 1334 phasor~ 440;
#X floatatom 510 1111 3 40 90 0 - - -;
#X obj 510 1130 mtof;
#X floatatom 510 1149 9 0 22000 0 - - -;
#X text 574 1150 Hz;
#X floatatom 573 1191 5 2 9999 0 - - -;
#X text 614 1192 ms;
#X obj 480 1211 bpq2~ 440 20 200;
#X obj 446 1178 phasor~ 120;
#X floatatom 652 976 3 40 90 0 - - -;
#X obj 652 995 mtof;
#X floatatom 652 1014 9 0 22000 0 - - -;
#X text 716 1015 Hz;
#X floatatom 715 1056 5 2 9999 0 - - -;
#X text 756 1057 ms;
#X text 715 1037 Q;
#X obj 622 1076 bpq2~ 440 20 200;
#X obj 588 1043 phasor~ 120;
#X floatatom 868 1059 3 40 90 0 - - -;
#X obj 868 1078 mtof;
#X floatatom 868 1097 9 0 22000 0 - - -;
#X text 932 1098 Hz;
#X floatatom 931 1139 5 2 9999 0 - - -;
#X text 972 1140 ms;
#X floatatom 898 1120 4 4 50 0 - - -;
#X text 931 1120 Q;
#X obj 838 1159 bpq2~ 440 20 200;
#X obj 804 1126 phasor~ 120;
#X obj 662 1037 drunk 10;
#X obj 525 862 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text 677 976 comment;
#X text 480 1267 comment;
#X text 535 1111 comment;
#X obj 536 907 metro 1000;
#X obj 865 1004 random 30;
#X obj 866 1035 + 50;
#X obj 548 1116 random 5;
#X text 601 1114 Q;
#X obj 543 1184 + 5;
#X text 103 1059 comment;
#X msg 731 530 1 1000;
#X obj 666 637 *~;
#X msg 798 534 0 1000;
#X connect 0 0 10 0;
#X connect 1 0 11 0;
#X connect 2 0 4 0;
#X connect 4 0 0 0;
#X connect 6 0 10 1;
#X connect 8 0 7 0;
#X connect 8 0 7 1;
#X connect 10 0 8 0;
#X connect 11 0 21 0;
#X connect 11 0 19 0;
#X connect 11 1 2 0;
#X connect 19 0 20 0;
#X connect 20 0 6 0;
#X connect 21 0 6 0;
#X connect 22 0 23 0;
#X connect 23 0 25 0;
#X connect 25 0 32 0;
#X connect 25 0 34 0;
#X connect 25 0 36 0;
#X connect 25 0 39 0;
#X connect 25 0 40 0;
#X connect 27 0 31 0;
#X connect 27 0 31 1;
#X connect 28 0 29 0;
#X connect 29 0 94 0;
#X connect 30 0 27 1;
#X connect 34 0 33 0;
#X connect 36 0 35 0;
#X connect 39 0 37 0;
#X connect 40 0 38 0;
#X connect 47 0 51 0;
#X connect 47 0 51 1;
#X connect 48 0 49 0;
#X connect 49 0 93 0;
#X connect 50 0 47 1;
#X connect 54 0 69 0;
#X connect 55 0 56 0;
#X connect 56 0 57 0;
#X connect 57 0 69 1;
#X connect 59 0 69 3;
#X connect 61 0 69 2;
#X connect 69 0 47 0;
#X connect 73 0 79 1;
#X connect 74 0 79 0;
#X connect 75 0 79 2;
#X connect 79 0 81 0;
#X connect 81 0 85 0;
#X connect 81 0 85 1;
#X connect 82 0 83 0;
#X connect 83 0 92 0;
#X connect 84 0 81 1;
#X connect 88 0 91 0;
#X connect 90 0 74 0;
#X connect 90 1 73 0;
#X connect 90 2 75 0;
#X connect 91 0 90 0;
#X connect 92 0 84 0;
#X connect 93 0 50 0;
#X connect 94 0 30 0;
#X connect 96 0 97 0;
#X connect 97 0 99 0;
#X connect 99 0 101 0;
#X connect 99 0 103 0;
#X connect 99 0 105 0;
#X connect 99 0 108 0;
#X connect 99 0 109 0;
#X connect 101 0 123 0;
#X connect 102 0 124 0;
#X connect 103 0 102 0;
#X connect 104 0 125 0;
#X connect 105 0 104 0;
#X connect 106 0 126 0;
#X connect 107 0 127 0;
#X connect 108 0 106 0;
#X connect 109 0 107 0;
#X connect 110 0 114 0;
#X connect 110 0 114 1;
#X connect 111 0 112 0;
#X connect 112 0 117 0;
#X connect 113 0 110 1;
#X connect 117 0 113 0;
#X connect 118 0 127 1;
#X connect 119 0 123 1;
#X connect 120 0 124 1;
#X connect 121 0 125 1;
#X connect 122 0 126 1;
#X connect 123 0 110 0;
#X connect 124 0 110 0;
#X connect 125 0 110 0;
#X connect 126 0 110 0;
#X connect 127 0 110 0;
#X connect 128 0 6 1;
#X connect 129 0 6 1;
#X connect 130 0 131 0;
#X connect 131 0 132 0;
#X connect 132 0 133 0;
#X connect 133 0 192 0;
#X connect 134 0 192 1;
#X connect 136 0 140 0;
#X connect 136 0 140 1;
#X connect 137 0 138 0;
#X connect 138 0 141 0;
#X connect 139 0 136 1;
#X connect 141 0 139 0;
#X connect 142 0 143 0;
#X connect 143 0 144 0;
#X connect 144 0 151 0;
#X connect 146 0 150 3;
#X connect 148 0 150 2;
#X connect 150 0 136 0;
#X connect 151 0 150 0;
#X connect 152 0 153 0;
#X connect 153 0 154 0;
#X connect 154 0 159 0;
#X connect 156 0 158 3;
#X connect 158 0 136 0;
#X connect 159 0 158 0;
#X connect 160 0 161 0;
#X connect 161 0 162 0;
#X connect 162 0 168 0;
#X connect 164 0 167 3;
#X connect 167 0 136 0;
#X connect 168 0 167 0;
#X connect 169 0 170 0;
#X connect 170 0 171 0;
#X connect 171 0 178 0;
#X connect 173 0 177 3;
#X connect 175 0 177 2;
#X connect 177 0 136 0;
#X connect 178 0 177 0;
#X connect 179 0 167 2;
#X connect 180 0 184 0;
#X connect 184 0 179 0;
#X connect 184 0 185 0;
#X connect 184 0 187 0;
#X connect 185 0 186 0;
#X connect 186 0 169 0;
#X connect 187 0 189 0;
#X connect 189 0 158 2;
#X connect 191 0 134 0;
#X connect 192 0 135 0;
#X connect 192 0 135 1;
#X connect 193 0 134 0;
